/**
 * Created by hardy on 2019/1/25.
 */
const readline = require('readline');
const fs=require('fs');
const os=require('os');
const _=require('underscore');
const invalidRuleNo='0304010001,0304010002,0304010003,0304010004,0304010005,0304010006,0304010007,0304010008,0304010009,0304010010,0302010001,0302010002,0302010003,0302010004,0302010005,0302010006,0301080001,0301080002,0301080003,0101010001,0103010004,G_0103010750,G_0103011087,G_0103012225,G_0103012502,G_0103012853,G_03010033,G_03010054,G_03010081,G_03010083,G_03010085,G_03010087,G_03010088,G_03010089,G_03010090,G_03010091,0102010003,0102010006,0102010015,0102010017,0102010023,0102010024,0102010026,0102010029,0102010031,0102010032,0102010033,0102010034,0102010035,0102010036,0102010048,0102010049,0102010050,0102010051,0102010055,0102010056,0102010058,0102010064,0102010066,0102010068,0102010069,0102040002,0102040004,0102040006,0102020002,0102020005,0102020006,0102020007,0102020008,0102020018,0102020021,0101060009,0101040003,0101040004,0101040005,0101040007,0101040008,0101040009,0101040022,0101040027,0101040028,0101040030,0101040031,0101040032,0101040034,0101040035,0101040036,0101040038,0101040039,0101040041,0101040044,0101056104,0101056105,0101070003xx,0105020001,0105010032,0105010033,0105010034,0105010035,0105010036,G_0101050101,0201010001,0204010001,0204010002,0204010003,0204010004,0204010005,0204010006,0204010007,0204010010,0204010011,0204010012,0204010013,0202010001,0202010002,0202010003,0202010004,0202010005,0202010006,0201080001,0201080002,0201080003,0201080004,G_0201080005';
const invalidRuleNos=invalidRuleNo.split(',');
const readfile="F:\\hardy\\svn-local\\apd-apd-git\\apd-web\\src\\main\\resources\\spring-ruleengine.xml";
const newfile="F:\\hardy\\spring-ruleengine.xml";

let fRead  = fs.createReadStream(readfile);
let fWrite =fs.createWriteStream(newfile);

let objReadline = readline.createInterface({
    input: fRead
});

objReadline.on('line', (line)=>{
    let tmp = line;
    fWrite.write(modifyLine(tmp) + os.EOL); // 下一行
    console.log(line);
});

objReadline.on('close', ()=>{
    console.log('readline close...');
});

function  modifyLine(line){
    let findOne=_.find(invalidRuleNos,function(ruleNo){
        return line.indexOf(ruleNo)>-1;
    });
    return findOne?"<!--规则组件1.5内没有此规则"+line+"-->":line;
}
